- name: Initialise prefix
  set_fact:
    openshift_istio_image_prefix: "{{ openshift_istio_image_dict[openshift_deployment_type]['istio_prefix'] }}"
  when: openshift_istio_image_prefix is not defined

- name: Initialise suffix
  set_fact:
    openshift_istio_image_suffix: "{{ openshift_istio_image_dict[openshift_deployment_type]['suffix'] }}"
  when: openshift_istio_image_suffix is not defined

- name: Initialise version
  set_fact:
    openshift_istio_image_version: "{{ openshift_istio_image_dict[openshift_deployment_type]['istio_version'] }}"
  when: openshift_istio_image_version is not defined

- name: Initialise Jaeger version
  set_fact:
    openshift_istio_jaeger_image_version: "{{ openshift_istio_image_dict[openshift_deployment_type]['jaeger_version'] }}"
  when: openshift_istio_jaeger_image_version is not defined or openshift_istio_jaeger_image_version == ""

- name: Initialise Jaeger prefix
  set_fact:
    openshift_istio_jaeger_image_prefix: "{{ openshift_istio_image_dict[openshift_deployment_type]['jaeger_prefix'] }}"
  when: openshift_istio_jaeger_image_prefix is not defined

- name: Initialise Elasticsearch version
  set_fact:
    openshift_istio_elasticsearch_image_version: "{{ openshift_istio_image_dict[openshift_deployment_type]['elasticsearch_version'] }}"
  when: openshift_istio_elasticsearch_image_version is not defined or openshift_istio_elasticsearch_image_version == ""

- name: Initialise namespace
  set_fact:
    openshift_istio_namespace: "{{ openshift_istio_image_dict[openshift_deployment_type]['namespace'] }}"
  when: openshift_istio_namespace is not defined

- name: Initialise kiali prefix
  set_fact:
    openshift_istio_kiali_image_prefix: "{{ openshift_istio_image_dict[openshift_deployment_type]['kiali_prefix'] }}"
  when: openshift_istio_kiali_image_prefix is not defined

- name: Initialise kiali version
  set_fact:
    openshift_istio_kiali_image_version: "{{ openshift_istio_image_dict[openshift_deployment_type]['kiali_version'] }}"
  when: openshift_istio_kiali_image_version is not defined

- name: Initialise 3scale prefix
  set_fact:
    openshift_istio_threescale_image_prefix: "{{ openshift_istio_image_dict[openshift_deployment_type]['threescale_prefix'] }}"
  when: openshift_istio_threescale_image_prefix is not defined

- name: Initialise 3scale version
  set_fact:
    openshift_istio_threescale_image_version: "{{ openshift_istio_image_dict[openshift_deployment_type]['threescale_version'] }}"
  when: openshift_istio_threescale_image_version is not defined

- name: Initialise Installation Type
  set_fact:
    openshift_istio_install_enterprise: "{{ openshift_deployment_type == 'openshift' }}"

- name: Determine whether kiali should be installed
  set_fact:
    openshift_istio_install_kiali: false
  when: (openshift_istio_kiali_username is not defined or openshift_istio_kiali_username == "") or (openshift_istio_kiali_password is not defined or openshift_istio_kiali_password == "")

# Split name initialisation up into CentOS/RHEL until we have CentOS jaeger images
- name: Initialise Istio Image names when running CentOS images
  set_fact:
    openshift_istio_image_names:
      "docker.io/istio/citadel:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}citadel{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/pilot:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}pilot{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/mixer:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}mixer{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/sidecar_injector:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}sidecar-injector{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxy_init:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxy-init{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxy:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxy{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxyv2:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxyv2{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/galley:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}galley{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/ior:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}ior{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "jaegertracing/jaeger-collector:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-collector:{{openshift_istio_jaeger_image_version}}"
      "jaegertracing/jaeger-query:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-query:{{openshift_istio_jaeger_image_version}}"
      "jaegertracing/jaeger-agent:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-agent:{{openshift_istio_jaeger_image_version}}"
      "registry.centos.org/rhsyseng/elasticsearch:{{default_istio_elasticsearch_image_tag}}": "{{default_istio_elasticsearch_image_prefix}}elasticsearch:{{openshift_istio_elasticsearch_image_version}}"
      "kiali/kiali:{{default_istio_kiali_image_tag}}": "{{openshift_istio_kiali_image_prefix}}kiali:{{openshift_istio_kiali_image_version}}"
      "quay.io/3scale/3scale-istio-adapter:{{default_istio_threescale_image_tag}}": "{{openshift_istio_threescale_image_prefix}}3scale-istio-adapter:{{openshift_istio_threescale_image_version}}"
  when: not openshift_istio_install_enterprise

- name: Initialise Istio Image names when running RHEL images
  set_fact:
    openshift_istio_image_names:
      "docker.io/istio/citadel:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}citadel{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/pilot:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}pilot{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/mixer:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}mixer{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/sidecar_injector:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}sidecar-injector{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxy_init:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxy-init{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxy:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxy{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/proxyv2:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}proxyv2{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/galley:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}galley{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "docker.io/istio/ior:{{default_istio_image_tag}}": "{{openshift_istio_image_prefix}}ior{{openshift_istio_image_suffix}}:{{openshift_istio_image_version}}"
      "jaegertracing/jaeger-collector:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-collector:{{openshift_istio_jaeger_image_version}}"
      "jaegertracing/jaeger-query:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-query:{{openshift_istio_jaeger_image_version}}"
      "jaegertracing/jaeger-agent:{{default_istio_jaeger_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-agent:{{openshift_istio_jaeger_image_version}}"
      "registry.centos.org/rhsyseng/elasticsearch:{{default_istio_elasticsearch_image_tag}}": "{{openshift_istio_jaeger_image_prefix}}jaeger-elasticsearch:{{openshift_istio_elasticsearch_image_version}}"
      "kiali/kiali:{{default_istio_kiali_image_tag}}": "{{openshift_istio_kiali_image_prefix}}kiali:{{openshift_istio_kiali_image_version}}"
      "quay.io/3scale/3scale-istio-adapter:{{default_istio_threescale_image_tag}}": "{{openshift_istio_threescale_image_prefix}}3scale-istio-adapter:{{openshift_istio_threescale_image_version}}"
  when: openshift_istio_install_enterprise

- name:
  command: cat /run/secrets/kubernetes.io/serviceaccount/token
  register: openshift_client_token

- name: Initialise oc binary using token
  set_fact:
    openshift_client_binary: "/usr/bin/oc --token={{ openshift_client_token.stdout }}"

- name: Initialise all service accounts fact
  set_fact:
    openshift_istio_all_service_accounts: "{{ openshift_istio_service_accounts }} + {{ openshift_istio_additional_service_accounts }}"

- name: Initialise Istio Release
  shell: "grep -wm 1 release {{ openshift_istio_yaml }} | awk '{print $2}'"
  register: openshift_istio_release

- name: Initialise Istio Release Tag
  set_fact:
    openshift_istio_release_tag: "{{ openshift_istio_release.stdout }}"

- name: Initialise Istio Kiali Release
  shell: "grep -wm 1 release {{ openshift_kiali_yaml }} | awk '{print $2}'"
  register: openshift_istio_kiali_release

- name: Initialise Istio Kiali Release Tag
  set_fact:
    openshift_istio_kiali_release_tag: "{{ openshift_istio_kiali_release.stdout }}"

- name: Obtain the installed maistra-version
  shell: "{{ openshift_client_binary }} get all -n {{ openshift_istio_namespace }} -o=jsonpath='{..metadata.labels.maistra-version}' | tr ' ' '\n' | sort -u"
  register: openshift_istio_installed_maistra_version_output
  ignore_errors: true

- name: Obtain the installed maistra-version from CRDs
  shell: "{{ openshift_client_binary }} get crd -o=jsonpath='{..metadata.labels.maistra-version}' | tr ' ' '\n' | sort -u"
  register: openshift_istio_installed_maistra_version_crd_output
  ignore_errors: true

- name: Initialise the installed maistra-version fact from the installed version
  set_fact:
    openshift_istio_installed_maistra_version: "{{ openshift_istio_installed_maistra_version_output.stdout }}"
  when: openshift_istio_installed_maistra_version_output.stdout != ""

- name: Initialise the installed maistra-version fact from the installed CRD version
  set_fact:
    openshift_istio_installed_maistra_version: "{{ openshift_istio_installed_maistra_version_crd_output.stdout }}"
  when: openshift_istio_installed_maistra_version_output.stdout == ""

- name: Initialise maistra app labels
  set_fact: openshift_istio_maistra_component_labels="{{ default_istio_maistra_component_labels }} + [ 'maistra-version={{ openshift_istio_installed_maistra_version }}' ]"

- name: Initialise the health check directory when running community
  set_fact:
    openshift_istio_sidecar_health_check_dir: ""
  when: openshift_istio_install_community

- name: Initialise the health check directory when not running community
  set_fact:
    openshift_istio_sidecar_health_check_dir: "/tmp"
  when: not openshift_istio_install_community
